todos los usuarios que miraron peliculas
MATCH(usuario:Usuario)-[:MIRO]->(pelicula:Pelicula) RETURN usuario, pelicula
amigos de marioSantos
MATCH(usuario {username:'MarioSantos'})-[:AMIGOS]->(amigo) RETURN usuario, amigo
peliculas que vieron amigos de un usuario(por ejemplo marioSantos)
MATCH(usuario {username:'MarioSantos'})-[:AMIGOS]->(amigo)-[:MIRO]->(pelicula) RETURN pelicula
nueve reinas, los vengadores, toy story

peliculas recomendadas
MATCH(usuario {username:'EdnaK'})-[:AMIGOS]->(amigo)-[:MIRO]->(pelicula) 
WHERE NOT(usuario) -[:MIRO]->(pelicula) RETURN pelicula LIMIT 5

MATCH(usuario {username:'EdnaK'})-[:AMIGOS]->(amigo)-[:MIRO]->(pelicula)
WHERE NOT(usuario) -[:MIRO]->(pelicula) RETURN pelicula LIMIT 5

TODO:
arreglar tabla recomendaciones, al comprar una entrada de una pelicula recomendada se deberia hacer nuevamente el query
y tendria que salir de la tabla la pelicula(en la base funciona ok, no actualiza bien en la app)
Traer de bd las peliculas y hacerle un set al atributo del model, luego tirar un fireproperty para actualizar la vista.

Cambiar el nombre de la relacion AMIGOS(por defecto) por ES_AMIGOS, revisar porque rompe al comprar una entrada.
@Relationship(type="ES_AMIGO", direction=Relationship.UNDIRECTED).
O utilizar modo EAGER y @Relationship(type="ES_AMIGO").

Clase entrada: porque rompe al poner el @transient de ogm?
org.neo4j.ogm.annotation.Transient no está funcionando, revisar.

query de amigos recomendados:
amigos de mis amigos V1:
MATCH (n:Usuario {username: 'MarioSantos'}) 
MATCH (n)-[:ES_AMIGO*2]-(m:Usuario) 
WHERE NOT (n)-[:ES_AMIGO]-(m) AND n <> m
RETURN m

amigos de mis amigos V2:
MATCH (user:Usuario {username:'MarioSantos'})-[:ES_AMIGO*]-> (amigos_de_amigos:Usuario) 
WHERE NOT (user)-[:ES_AMIGO]-(amigos_de_amigos) AND amigos_de_amigos <> user RETURN amigos_de_amigos


Tabla de lista de amigos sugeridos no se actualiza al agregar un amigo sugerido.

Cuando un usuario mira dos o mas veces una pelicula, en el grafo mostrar una sola relacion?


crear juego de datos con ids fijos(? y no dropear las bd para levantar de nuevo la app
Neo4J está creando de nuevo los nodos en vez de actualizar los mismos que ya tiene, me parece que el problema viene por el lado
de @GeneratedValue que autogenera uno nuevo, probar de setear manualmente y remover @GeneratedValue.

ahora los nodos se crean una sola vez, pero las relaciones se crean de nuevo, porque las entradas al crearse se crean con un id distino